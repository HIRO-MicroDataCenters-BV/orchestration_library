name: Build and Deploy the Orchestration API

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push the Docker image
      - name: Build and push Docker image
        run: |
          IMAGE_NAME=your-dockerhub-username/orchestration-library
          TAG=$(date +%Y%m%d%H%M%S)
          docker build -t $IMAGE_NAME:$TAG .
          docker push $IMAGE_NAME:$TAG
          echo "IMAGE_NAME=$IMAGE_NAME:$TAG" >> $GITHUB_ENV

  update-values:
    name: Update Helm values.yaml
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Update values.yaml with the new image
      - name: Update values.yaml
        run: |
          sed -i "s|repository:.*|repository: $IMAGE_NAME|" charts/orchestration-library/values.yaml
          sed -i "s|tag:.*|tag: ${IMAGE_NAME##*:}|" charts/orchestration-library/values.yaml

      # Step 3: Commit and push the changes
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add charts/orchestration-library/values.yaml
          git commit -m "Update image to $IMAGE_NAME"
          git push

  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: update-values

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 3: Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      # Step 4: Deploy the Helm chart
      - name: Deploy Helm chart
        run: |
          helm upgrade --install orchestration-library ./charts/orchestration-library --namespace default --create-namespace