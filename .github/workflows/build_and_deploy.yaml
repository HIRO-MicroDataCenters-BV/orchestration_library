name: Build and Deploy the Orchestration API

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and push the Docker image
      - name: Build and push Docker image
        run: |
            # Set the image name and tag
            IMAGE_NAME=${{ vars.ORCHESTRATION_API_IMAGE_NAME }}
            IMAGE_TAG=${{ vars.ORCHESTRATION_API_IMAGE_TAG }}-$(date +%Y%m%d%H%M%S)
            docker build -t $IMAGE_NAME:$IMAGE_TAG .
            docker push $IMAGE_NAME:$IMAGE_TAG
            echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
            echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
        
      - name: Delete old images from Docker Hub (keep only latest)
        run: |
          docker run --rm \
            -e HUB_USERNAME=${{ secrets.DOCKER_USERNAME }} \
            -e HUB_PASSWORD=${{ secrets.DOCKER_PASSWORD }} \
            ghcr.io/docker/hub-tool:latest \
            rmi ${{ vars.ORCHESTRATION_API_IMAGE_NAME }} --keep 1 --force

  
  # Enable this below job, in integration phase to deploy the application to Kubernetes
  deploy:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up kubectl
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      # Step 3: Set up Helm
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'
      
      # Step 4: Set up kubeconfig
      - name: Set up kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.HIRO_KUBE_CONFIG }}" > ~/.kube/config
          chmod 600 ~/.kube/config

      # Step 4: Deploy the Helm chart with kubeconfig
      - name: Deploy Helm chart
        run: |
          helm upgrade --install orchestration-api ./charts/orchestration-api \
            --namespace ${{ vars.ORCHESTRATION_API_NAMESPACE }} \
            --create-namespace \
            --set namespace=${{ vars.ORCHESTRATION_API_NAMESPACE }} \
            --set app.image.repository=$IMAGE_NAME \
            --set app.image.tag=$IMAGE_TAG
            