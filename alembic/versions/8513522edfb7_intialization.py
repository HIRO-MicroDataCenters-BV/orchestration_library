"""intialization

Revision ID: 8513522edfb7
Revises: 
Create Date: 2025-05-24 01:10:45.704786

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8513522edfb7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tuning_parameters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('output_1', sa.Float(), nullable=False),
    sa.Column('output_2', sa.Float(), nullable=False),
    sa.Column('output_3', sa.Float(), nullable=False),
    sa.Column('alpha', sa.Float(), nullable=False),
    sa.Column('beta', sa.Float(), nullable=False),
    sa.Column('gamma', sa.Float(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tuning_parameters_id'), 'tuning_parameters', ['id'], unique=False)
    op.add_column('node', sa.Column('ip_address', sa.String(), nullable=True))
    op.add_column('node', sa.Column('location', sa.String(), nullable=True))
    op.alter_column('node', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('pod', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False)
    op.alter_column('pod', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('pod', 'namespace',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.create_foreign_key(None, 'pod', 'workload_request', ['workload_request_id'], ['id'])
    op.alter_column('workload_request', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.UUID(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('workload_request_id_seq'::regclass)"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workload_request', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text("nextval('workload_request_id_seq'::regclass)"))
    op.drop_constraint(None, 'pod', type_='foreignkey')
    op.alter_column('pod', 'namespace',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('pod', 'name',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('pod', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('node', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('node', 'location')
    op.drop_column('node', 'ip_address')
    op.drop_index(op.f('ix_tuning_parameters_id'), table_name='tuning_parameters')
    op.drop_table('tuning_parameters')
    # ### end Alembic commands ###
