"""Incorporated the feedback

Revision ID: 7482261ed130
Revises: 93bf61ae8164
Create Date: 2025-07-03 03:23:46.879772

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7482261ed130'
down_revision: Union[str, None] = '93bf61ae8164'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workload_action', 'action_start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.create_index(op.f('ix_workload_action_created_at'), 'workload_action', ['created_at'], unique=False)
    op.add_column('workload_request_decision', sa.Column('node_name', sa.String(length=255), nullable=False))
    op.add_column('workload_request_decision', sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True))
    op.create_index(op.f('ix_workload_request_decision_created_at'), 'workload_request_decision', ['created_at'], unique=False)
    op.drop_column('workload_request_decision', 'updated_at')
    op.drop_column('workload_request_decision', 'pod_parent_kind')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('workload_request_decision', sa.Column('pod_parent_kind', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('workload_request_decision', sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_workload_request_decision_created_at'), table_name='workload_request_decision')
    op.drop_column('workload_request_decision', 'deleted_at')
    op.drop_column('workload_request_decision', 'node_name')
    op.drop_index(op.f('ix_workload_action_created_at'), table_name='workload_action')
    op.alter_column('workload_action', 'action_start_time',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    # ### end Alembic commands ###
