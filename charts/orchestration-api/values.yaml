runMigration: false

# PostgreSQL Database
postgres:
  name: aces-postgres
  image:
    repository: postgres
    tag: "14"
    pullPolicy: Always
  replicaCount: 1
  service:
    type: ClusterIP
    port: 5432
    nodePort: 
  persistence:
    enabled: true
    size: 5Gi
  credentials:
    username: postgres
    password: postgres
    database: orchestration_db

# FastAPI Application
app:
  name: aces-orchestration-api
  secret:
    name: orchestration-api-secret
  image:
    repository: orchestration-api
    tag: alpha1
    pullPolicy: Always
  replicaCount: 2
  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
    nodePort: 30015
  ingress:
    enabled: true
    className: nginx
    host: orchestration-api.aces.hiro-develop.nl
    path: /
    tls: true
    tlsSecretName: orchestration-api-tls-secret

configmap:
  databaseURLConfig: orchestration-api-config
  databaseInitConfig: db-init-script

# The below values are for the k8s-dashboard subchart
k8sDashboard:
  enabled: false
  serviceAccountName: readonly-user
  reverseProxy:
    service:
      type: ClusterIP
      nodePort: 30016
  # Access URL for the Kubernetes Dashboard
  # This should be the URL where the Kubernetes Dashboard is accessible
  # If using a reverse proxy, it should point to the proxy service URL
  # For example, if using NodePort, it could be something like:
  # http://<node-ip>:<node-port>/
  # If using a LoadBalancer, it could be the external IP of the LoadBalancer
  # If using Ingress, it could be the Ingress URL
  accessURL: http://localhost:30016

# Global settings for PostgreSQL which is needed by the subchart
# This is to ensure that the PostgreSQL database is available for the k8s-dashboard subchart
global:
  postgresql:
    auth:
      postgresPassword: postgres
      password: postgres


# The below values are for the Pod Timing Watcher
podTimingWatcher:
  enabled: true
  name: pod-timing-watcher
  replicaCount: 1
  serviceAccount:
    create: true
    name: pod-timing-watcher-sa
  image:
    repository: pod-timing-watcher
    tag: alpha1
    pullPolicy: Always
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  env:
    # this values is orchestration-api's API for workload_timing DB. 
    # Use same values as app.name:app.service.port.
    - name: WORKLOAD_TIMING_API_URL
      value: "http://aces-orchestration-api/workload_timing/"
  # ingress:
  #   enabled: true
  #   className: nginx
  #   host: pod-timing-watcher.aces.hiro-develop.nl
  #   path: /
  #   tls: true
  #   tlsSecretName: pod-timing-watcher-tls-secret
